from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9fcba9b2e446'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AssetTypes',
        sa.Column('AssetTypeID', sa.Integer(), nullable=False, primary_key=True, autoincrement=True),
        sa.Column('TypeName', sa.String(length=255), nullable=False, unique=True),
        sa.Column('Description', sa.Text(), nullable=True)
    )
    op.create_table('Assets',
        sa.Column('AssetID', sa.Integer(), nullable=False, primary_key=True, autoincrement=True),
        sa.Column('AssetTypeID', sa.Integer(), nullable=True),
        sa.Column('Name', sa.String(length=255), nullable=False),
        sa.Column('CreatedAt', sa.DateTime(), server_default=sa.func.current_timestamp(), nullable=True),
        sa.Column('CreatedBy', sa.String(length=255), nullable=True),
        sa.Column('LastModified', sa.DateTime(), server_default=sa.func.current_timestamp(), nullable=True),
        sa.ForeignKeyConstraint(['AssetTypeID'], ['AssetTypes.AssetTypeID'])
    )
    op.create_table('AssetProperties',
        sa.Column('PropertyID', sa.Integer(), nullable=False, primary_key=True, autoincrement=True),
        sa.Column('AssetTypeID', sa.Integer(), nullable=True),
        sa.Column('PropertyName', sa.String(length=255), nullable=False),
        sa.Column('DataType', sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(['AssetTypeID'], ['AssetTypes.AssetTypeID'])
    )
    op.create_table('AssetPropertyValues',
        sa.Column('AssetID', sa.Integer(), nullable=False),
        sa.Column('PropertyID', sa.Integer(), nullable=False),
        sa.Column('PropertyValue', sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(['AssetID'], ['Assets.AssetID']),
        sa.ForeignKeyConstraint(['PropertyID'], ['AssetProperties.PropertyID']),
        sa.PrimaryKeyConstraint('AssetID', 'PropertyID')
    )
    op.create_table('AssetRelationships',
        sa.Column('RelationshipID', sa.Integer(), nullable=False, primary_key=True, autoincrement=True),
        sa.Column('ParentAssetID', sa.Integer(), nullable=True),
        sa.Column('ChildAssetID', sa.Integer(), nullable=True),
        sa.Column('RelationshipType', sa.String(length=255), nullable=False),
        sa.ForeignKeyConstraint(['ChildAssetID'], ['Assets.AssetID']),
        sa.ForeignKeyConstraint(['ParentAssetID'], ['Assets.AssetID'])
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('AssetRelationships')
    op.drop_table('AssetPropertyValues')
    op.drop_table('AssetProperties')
    op.drop_table('Assets')
    op.drop_table('AssetTypes')
    # ### end Alembic commands ###
